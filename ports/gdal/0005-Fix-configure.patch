--- gdal322-clean/configure.ac	2021-03-05 12:38:35.000000000 +0100
+++ gdal322-3f299631f0/configure.ac	2021-05-10 09:52:56.734368331 +0200
@@ -1274,12 +1274,16 @@
 
 if test "x${with_libtiff}" = "xyes" -o "x${with_libtiff}" = "x" ; then
 
-  dnl Only automatically pick up the external libtiff if it is >= 4.0.
-  AC_CHECK_LIB(tiff,TIFFScanlineSize64,TIFF_SETTING=external HAVE_BIGTIFF=yes,TIFF_SETTING=internal HAVE_BIGTIFF=yes,)
+  PKG_PROG_PKG_CONFIG([0.21])
+  PKG_CHECK_MODULES([TIFF],[libtiff-4 > 4.0], [TIFF_SETTING=external], [TIFF_SETTING=internal HAVE_BIGTIFF=yes])
 
   if test "$TIFF_SETTING" = "external" ; then
-    LIBS="-ltiff $LIBS"
     AC_MSG_RESULT([using pre-installed libtiff.])
+    EXTRA_INCLUDES="$TIFF_CFLAGS $EXTRA_INCLUDES"
+    SAVED_LIBS="$LIBS"
+    LIBS="$TIFF_LIBS"
+    AC_SEARCH_LIBS(TIFFScanlineSize64,[],HAVE_BIGTIFF=yes,HAVE_BIGTIFF=no,)
+    LIBS="$TIFF_LIBS $SAVED_LIBS"
   else
     AC_MSG_RESULT([using internal TIFF code.])
   fi
@@ -1333,22 +1337,29 @@
 dnl Clear some cache variables
 unset ac_cv_path_LIBCURL
 
+LIBCURL_MODVERSION=
 if test "`basename xx/$with_curl`" = "curl-config" ; then
   LIBCURL_CONFIG="$with_curl"
 elif test "$with_curl" = "no" ; then
   LIBCURL_CONFIG=no
+elif test "$with_curl" = "yes" -o "$with_curl" = "" ; then
+  PKG_PROG_PKG_CONFIG([0.21])
+  PKG_CHECK_EXISTS([libcurl], [LIBCURL_CONFIG="${PKG_CONFIG} libcurl"], [LIBCURL_CONFIG=false])
+  LIBCURL_MODVERSION=`$LIBCURL_CONFIG --modversion`
 else
   AC_PATH_PROG(LIBCURL_CONFIG, curl-config, no)
 fi
 
 if test "$LIBCURL_CONFIG" != "no" ; then
 
-  CURL_VERNUM=`$LIBCURL_CONFIG --vernum`
-  CURL_VER=`$LIBCURL_CONFIG --version | awk '{print $2}'`
+  CURL_VER="`$LIBCURL_CONFIG --version | awk '{print $2}'`$LIBCURL_MODVERSION"
 
   AC_MSG_RESULT([        found libcurl version $CURL_VER])
 
-  AC_CHECK_LIB(curl,curl_global_init,CURL_SETTING=yes,CURL_SETTING=no,`$LIBCURL_CONFIG --libs`)
+  SAVED_LIBS="$LIBS"
+  LIBS=`$LIBCURL_CONFIG --libs`
+  AC_SEARCH_LIBS(curl_global_init,[],CURL_SETTING=yes,CURL_SETTING=no,)
+  LIBS="$SAVED_LIBS"
 
 fi
 
@@ -1362,7 +1373,9 @@
 dnl ---------------------------------------------------------------------------
 
 SQLITE3_REQ_VERSION="3.0.0"
-AX_LIB_SQLITE3($SQLITE3_REQ_VERSION)
+AC_CHECK_LIB(sqlite3,sqlite3_open,HAVE_SQLITE3=yes,AC_MSG_ERROR([vcpkg sqlite3 not found]),)
+SQLITE3_CFLAGS=
+SQLITE3_LDFLAGS=-lsqlite3
 
 if test "$HAVE_SQLITE3" = "yes"; then
     LIBS="$SQLITE3_LDFLAGS $LIBS"
@@ -1592,10 +1605,10 @@
 AC_ARG_WITH(zstd,[  --with-zstd[=ARG]       Include zstd support (ARG=yes/no/installation_prefix)],,)
 
 if test "$with_zstd" = "" -o "$with_zstd" = "yes" ; then
-  AC_CHECK_LIB(zstd,ZSTD_decompressStream,ZSTD_SETTING=yes,ZSTD_SETTING=no,)
+  AC_CHECK_LIB(zstd$DEBUG_POSTFIX,ZSTD_decompressStream,ZSTD_SETTING=yes,ZSTD_SETTING=no,)
 
   if test "$ZSTD_SETTING" = "yes" ; then
-    LIBS="-lzstd $LIBS"
+    LIBS="-lzstd$DEBUG_POSTFIX $LIBS"
   else
     if test "$with_zstd" = "yes" ; then
       AC_MSG_ERROR([libzstd not found])
@@ -1893,6 +1906,12 @@
     SAVED_LIBS="${LIBS}"
     LIBS="${PG_LIB}"
     AC_CHECK_LIB(pq,PQconnectdb,HAVE_PG=yes,HAVE_PG=no)
+    if test "${HAVE_PG}" = "no" ; then
+      unset ac_cv_lib_pq_PQconnectdb
+      PG_LIB="${PG_LIB} -lpgcommon -lpgport"
+      LIBS="${PG_LIB} ${SAVED_LIBS}"
+      AC_CHECK_LIB(pq,PQconnectdb,HAVE_PG=yes,HAVE_PG=no,[-lpgcommon -lpgport])
+    fi
     LIBS="${SAVED_LIBS}"
     if test "${HAVE_PG}" = "yes" ; then
       LIBS="${PG_LIB} ${LIBS}"
@@ -2304,10 +2323,10 @@
 
   dnl We now require libgeotiff 1.5.0
   dnl first check if $with_geotiff/lib has the library:
-  AC_CHECK_LIB(geotiff,GTIFAttachPROJContext,GEOTIFF_SETTING=external,GEOTIFF_SETTING=not_found,-L$with_geotiff/lib)
+  AC_CHECK_LIB(geotiff,GTIFAttachPROJContext,GEOTIFF_SETTING=external,GEOTIFF_SETTING=not_found,-L$with_geotiff$DEBUG_DIR/lib)
 
   if test $GEOTIFF_SETTING = "external" ; then
-    LIBS="-L$with_geotiff/lib -lgeotiff $LIBS"
+    LIBS="-L$with_geotiff$DEBUG_DIR/lib -lgeotiff $LIBS"
     if test  -d $with_geotiff/include ; then
       EXTRA_INCLUDES="-I$with_geotiff/include $EXTRA_INCLUDES"
     fi
@@ -4043,7 +4062,9 @@
 
 dnl Expat 1.95.0 released in 2000-09-28
 EXPAT_REQ_VERSION="1.95.0"
-AX_LIB_EXPAT($EXPAT_REQ_VERSION)
+AC_CHECK_LIB(expat,XML_ParserCreate,HAVE_EXPAT=yes,AC_MSG_ERROR([vcpkg expat not found]))
+EXPAT_LDFLAGS="-lexpat"
+EXPAT_INCLUDE=""
 
 if test "$HAVE_EXPAT" = "yes"; then
     LIBS="$EXPAT_LDFLAGS $LIBS"
@@ -4066,7 +4087,13 @@
 dnl ---------------------------------------------------------------------------
 
 LIBKML_REQ_VERSION="1.3.0"
+if test "x${with_libkml}" = "xno"; then
+    echo "libkml support disabled."
+    HAVE_LIBKML="no"
+    LIBKML_CFLAGS=
+else
 AX_LIB_LIBKML($LIBKML_REQ_VERSION)
+fi
 
 if test "$HAVE_LIBKML" = "yes"; then
     LIBS="$LIBKML_LDFLAGS $LIBS"
@@ -4244,8 +4271,8 @@
       dnl Add curl to LIBS; it might be local to DODS or generally installed
       if test -x $DODS_BIN/curl-config; then
           LIBS="$LIBS  `$DODS_BIN/curl-config --libs`"
-      elif which curl-config > /dev/null 2>&1; then
-          LIBS="$LIBS  `curl-config --libs`"
+      elif test "$CURL_SETTING" = "yes"; then
+          LIBS="$LIBS $CURL_LIB"
       else
           AC_MSG_ERROR([You gave a dods root, but I can't find curl!])
       fi
@@ -4567,7 +4594,7 @@
 dnl Check if geos library is available.
 dnl ---------------------------------------------------------------------------
 
-GEOS_INIT(3.1.0)
+PKG_CHECK_MODULES(GEOS,geos >= 3.1.0,HAVE_GEOS=yes,AC_MSG_ERROR([vcpkg geos not found]))
 HAVE_GEOS_RESULT="no"
 if test "${HAVE_GEOS}" = "yes" ; then
 
@@ -4812,6 +4839,17 @@
 
 AC_ARG_WITH(libjson-c,[  --with-libjson-c[=ARG]       Include libjson-c support (ARG=internal or libjson-c directory)],,)
 
+PKG_PROG_PKG_CONFIG([0.21])
+PKG_CHECK_MODULES([JSONC],[json-c],[HAVE_JSONC=yes],[HAVE_JSONC=no])
+SAVED_LIBS="$LIBS"
+LIBS="$JSONC_LIBS"
+AC_SEARCH_LIBS(json_object_set_serializer,[],LIBJSONC_SETTING=external,LIBJSONC_SETTING=,)
+if test "$LIBJSONC_SETTING" = "external" ; then
+  LIBS="$JSONC_LIBS $SAVED_LIBS"
+  JSON_INCLUDE="$JSONC_CFLAGS"
+else
+  LIBS="$SAVED_LIBS"
+
 if test "$with_libjson_c" = "external" -o "$with_libjson_c" = "" -o "$with_libjson_c" = "yes" ; then
   AC_CHECK_LIB(json-c,json_object_set_serializer,LIBJSONC_SETTING=external,LIBJSONC_SETTING=internal,)
 elif test "$with_libjson_c" = "internal" ; then
@@ -4840,6 +4878,8 @@
     AC_MSG_RESULT([using internal libjson-c code])
 fi
 
+fi # json-c.pc
+
 AC_SUBST(LIBJSONC_SETTING,$LIBJSONC_SETTING)
 AC_SUBST(JSON_INCLUDE,$JSON_INCLUDE)
 
