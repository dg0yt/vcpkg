diff --git a/gir/meson.build b/gir/meson.build
index 3a01683..6c8c711 100644
--- a/gir/meson.build
+++ b/gir/meson.build
@@ -506,11 +506,17 @@ gir_files += custom_target('gir-girepository',
 )
 
 typelibs = []
+if get_option('gi_cross_use_prebuilt_gi')
+  gircompiler = find_program('g-ir-compiler')
+endif
 if get_option('gi_cross_binary_wrapper') != ''
   gircompiler_command = [get_option('gi_cross_binary_wrapper'), gircompiler.full_path(), ]
 else
   gircompiler_command = [gircompiler, ]
 endif
+if get_option('gi_cross_use_prebuilt_gi')
+  gircompiler = [] # not a dependency
+endif
 
 gircompiler_command += [
   '-o', '@OUTPUT@',
diff --git a/meson.build b/meson.build
index 4b2e574..e10ec1e 100644
--- a/meson.build
+++ b/meson.build
@@ -175,7 +175,9 @@ configure_file(
 )
 
 # python headers
+if not get_option('gi_cross_use_prebuilt_gi')
 cc.check_header('Python.h', dependencies: [python.dependency()], required: true)
+endif
 
 # cairo
 cairo_option = get_option('cairo')
@@ -231,7 +233,12 @@ fs = import('fs')
 
 subdir('girepository')
 subdir('tools')
+if not get_option('gi_cross_use_prebuilt_gi')
 subdir('giscanner')
+else
+  gdump = []
+  giscanner_pymod = []
+endif
 
 # Not building gir data might be useful in cross-compilation
 # scenarios where running target binaries through software emulation
diff --git a/tools/meson.build b/tools/meson.build
index 7237a0b..a8d9239 100644
--- a/tools/meson.build
+++ b/tools/meson.build
@@ -66,7 +66,9 @@ gircompiler = executable('g-ir-compiler', 'compiler.c',
   install: true,
   c_args: custom_c_args,
 )
+if not get_option('gi_cross_use_prebuilt_gi')
 meson.override_find_program('g-ir-compiler', gircompiler)
+endif
 
 girgenerate = executable('g-ir-generate', 'generate.c',
   dependencies: [
