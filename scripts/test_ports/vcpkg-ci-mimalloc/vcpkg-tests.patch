diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index 398637c8..add97cea 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.0)
+cmake_minimum_required(VERSION 3.5)
 project(mimalloc-test C CXX)
 
 set(CMAKE_C_STANDARD 11)
@@ -16,30 +16,36 @@ if (NOT CMAKE_BUILD_TYPE)
 endif()
 
 # Import mimalloc (if installed)
-find_package(mimalloc 1.7 REQUIRED NO_SYSTEM_ENVIRONMENT_PATH)
+find_package(mimalloc 3.0 REQUIRED NO_SYSTEM_ENVIRONMENT_PATH)
 message(STATUS "Found mimalloc installed at: ${MIMALLOC_LIBRARY_DIR} (${MIMALLOC_VERSION_DIR})")
 
+set(THREADS_PREFER_PTHREAD_FLAG 1)
+find_package(Threads REQUIRED)
+
+if(BUILD_SHARED_LIBS)
 # overriding with a dynamic library
 add_executable(dynamic-override  main-override.c)
 target_link_libraries(dynamic-override PUBLIC mimalloc)
 
 add_executable(dynamic-override-cxx  main-override.cpp)
 target_link_libraries(dynamic-override-cxx PUBLIC mimalloc)
+target_link_libraries(dynamic-override-cxx PRIVATE Threads::Threads)
+endif()
 
-
+if(0)
 # overriding with a static object file works reliable as the symbols in the
 # object file have priority over those in library files
 add_executable(static-override-obj main-override.c ${MIMALLOC_OBJECT_DIR}/mimalloc.o)
 target_include_directories(static-override-obj PUBLIC ${MIMALLOC_INCLUDE_DIR})
 target_link_libraries(static-override-obj PUBLIC pthread)
+endif()
 
-
+if(NOT BUILD_SHARED_LIBS)
 # overriding with a static library works too if using the `mimalloc-override.h`
 # header to redefine malloc/free. (the library already overrides new/delete)
 add_executable(static-override-static main-override-static.c)
 target_link_libraries(static-override-static PUBLIC mimalloc-static)
 
-
 # overriding with a static library: this may not work if the library is linked too late
 # on the command line after the C runtime library; but we cannot control that well in CMake
 add_executable(static-override main-override.c)
@@ -47,7 +53,10 @@ target_link_libraries(static-override PUBLIC mimalloc-static)
 
 add_executable(static-override-cxx  main-override.cpp)
 target_link_libraries(static-override-cxx PUBLIC mimalloc-static)
+target_link_libraries(static-override-cxx PRIVATE Threads::Threads)
+endif()
 
+include("${VCPKG_TESTS}")
 
 ## test memory errors
 add_executable(test-wrong  test-wrong.c)
